//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Airport_PresentationLayer.AirportReferences {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AirportReferences.IAirportService")]
    public interface IAirportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetCountries", ReplyAction="http://tempuri.org/IAirportService/GetCountriesResponse")]
        Airport.DataEntities.Entities.Countries[] GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetCountries", ReplyAction="http://tempuri.org/IAirportService/GetCountriesResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Countries[]> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddCountries", ReplyAction="http://tempuri.org/IAirportService/AddCountriesResponse")]
        void AddCountries(Airport.DataEntities.Entities.Countries countries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddCountries", ReplyAction="http://tempuri.org/IAirportService/AddCountriesResponse")]
        System.Threading.Tasks.Task AddCountriesAsync(Airport.DataEntities.Entities.Countries countries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteCountry", ReplyAction="http://tempuri.org/IAirportService/DeleteCountryResponse")]
        void DeleteCountry(Airport.DataEntities.Entities.Countries id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteCountry", ReplyAction="http://tempuri.org/IAirportService/DeleteCountryResponse")]
        System.Threading.Tasks.Task DeleteCountryAsync(Airport.DataEntities.Entities.Countries id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddProvince", ReplyAction="http://tempuri.org/IAirportService/AddProvinceResponse")]
        void AddProvince(Airport.DataEntities.Entities.Province province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddProvince", ReplyAction="http://tempuri.org/IAirportService/AddProvinceResponse")]
        System.Threading.Tasks.Task AddProvinceAsync(Airport.DataEntities.Entities.Province province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteProvince", ReplyAction="http://tempuri.org/IAirportService/DeleteProvinceResponse")]
        void DeleteProvince(Airport.DataEntities.Entities.Province id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteProvince", ReplyAction="http://tempuri.org/IAirportService/DeleteProvinceResponse")]
        System.Threading.Tasks.Task DeleteProvinceAsync(Airport.DataEntities.Entities.Province id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetProvince", ReplyAction="http://tempuri.org/IAirportService/GetProvinceResponse")]
        Airport.DataEntities.Entities.Province[] GetProvince();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetProvince", ReplyAction="http://tempuri.org/IAirportService/GetProvinceResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Province[]> GetProvinceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddCustomer", ReplyAction="http://tempuri.org/IAirportService/AddCustomerResponse")]
        void AddCustomer(Airport.DataEntities.Entities.Customers customers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddCustomer", ReplyAction="http://tempuri.org/IAirportService/AddCustomerResponse")]
        System.Threading.Tasks.Task AddCustomerAsync(Airport.DataEntities.Entities.Customers customers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetCustomers", ReplyAction="http://tempuri.org/IAirportService/GetCustomersResponse")]
        Airport.DataEntities.Entities.Customers[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetCustomers", ReplyAction="http://tempuri.org/IAirportService/GetCustomersResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Customers[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddExpedition", ReplyAction="http://tempuri.org/IAirportService/AddExpeditionResponse")]
        void AddExpedition(Airport.DataEntities.Entities.Expedition expedition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddExpedition", ReplyAction="http://tempuri.org/IAirportService/AddExpeditionResponse")]
        System.Threading.Tasks.Task AddExpeditionAsync(Airport.DataEntities.Entities.Expedition expedition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetExpedition", ReplyAction="http://tempuri.org/IAirportService/GetExpeditionResponse")]
        Airport.DataEntities.Entities.Expedition[] GetExpedition();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetExpedition", ReplyAction="http://tempuri.org/IAirportService/GetExpeditionResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Expedition[]> GetExpeditionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddPersonel", ReplyAction="http://tempuri.org/IAirportService/AddPersonelResponse")]
        void AddPersonel(Airport.DataEntities.Entities.Personel personel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddPersonel", ReplyAction="http://tempuri.org/IAirportService/AddPersonelResponse")]
        System.Threading.Tasks.Task AddPersonelAsync(Airport.DataEntities.Entities.Personel personel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetPersonel", ReplyAction="http://tempuri.org/IAirportService/GetPersonelResponse")]
        Airport.DataEntities.Entities.Personel[] GetPersonel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetPersonel", ReplyAction="http://tempuri.org/IAirportService/GetPersonelResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Personel[]> GetPersonelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddTicket", ReplyAction="http://tempuri.org/IAirportService/AddTicketResponse")]
        void AddTicket(Airport.DataEntities.Entities.Ticket ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddTicket", ReplyAction="http://tempuri.org/IAirportService/AddTicketResponse")]
        System.Threading.Tasks.Task AddTicketAsync(Airport.DataEntities.Entities.Ticket ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetTicket", ReplyAction="http://tempuri.org/IAirportService/GetTicketResponse")]
        Airport.DataEntities.Entities.Ticket[] GetTicket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetTicket", ReplyAction="http://tempuri.org/IAirportService/GetTicketResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Ticket[]> GetTicketAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddAirplane", ReplyAction="http://tempuri.org/IAirportService/AddAirplaneResponse")]
        void AddAirplane(Airport.DataEntities.Entities.Airplane airplane);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddAirplane", ReplyAction="http://tempuri.org/IAirportService/AddAirplaneResponse")]
        System.Threading.Tasks.Task AddAirplaneAsync(Airport.DataEntities.Entities.Airplane airplane);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetAirplane", ReplyAction="http://tempuri.org/IAirportService/GetAirplaneResponse")]
        Airport.DataEntities.Entities.Airplane[] GetAirplane();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetAirplane", ReplyAction="http://tempuri.org/IAirportService/GetAirplaneResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Airplane[]> GetAirplaneAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/ListForComboBox", ReplyAction="http://tempuri.org/IAirportService/ListForComboBoxResponse")]
        Airport.DataEntities.Entities.Airports[] ListForComboBox();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/ListForComboBox", ReplyAction="http://tempuri.org/IAirportService/ListForComboBoxResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.Airports[]> ListForComboBoxAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteAirplane", ReplyAction="http://tempuri.org/IAirportService/DeleteAirplaneResponse")]
        void DeleteAirplane(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteAirplane", ReplyAction="http://tempuri.org/IAirportService/DeleteAirplaneResponse")]
        System.Threading.Tasks.Task DeleteAirplaneAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditAirplane", ReplyAction="http://tempuri.org/IAirportService/EditAirplaneResponse")]
        void EditAirplane(Airport.DataEntities.Entities.Airplane airplane);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditAirplane", ReplyAction="http://tempuri.org/IAirportService/EditAirplaneResponse")]
        System.Threading.Tasks.Task EditAirplaneAsync(Airport.DataEntities.Entities.Airplane airplane);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteCustomer", ReplyAction="http://tempuri.org/IAirportService/DeleteCustomerResponse")]
        void DeleteCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteCustomer", ReplyAction="http://tempuri.org/IAirportService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditCustomer", ReplyAction="http://tempuri.org/IAirportService/EditCustomerResponse")]
        void EditCustomer(Airport.DataEntities.Entities.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditCustomer", ReplyAction="http://tempuri.org/IAirportService/EditCustomerResponse")]
        System.Threading.Tasks.Task EditCustomerAsync(Airport.DataEntities.Entities.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteExpedition", ReplyAction="http://tempuri.org/IAirportService/DeleteExpeditionResponse")]
        void DeleteExpedition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteExpedition", ReplyAction="http://tempuri.org/IAirportService/DeleteExpeditionResponse")]
        System.Threading.Tasks.Task DeleteExpeditionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditExpedition", ReplyAction="http://tempuri.org/IAirportService/EditExpeditionResponse")]
        void EditExpedition(Airport.DataEntities.Entities.Expedition expedition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditExpedition", ReplyAction="http://tempuri.org/IAirportService/EditExpeditionResponse")]
        System.Threading.Tasks.Task EditExpeditionAsync(Airport.DataEntities.Entities.Expedition expedition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeletePersonel", ReplyAction="http://tempuri.org/IAirportService/DeletePersonelResponse")]
        void DeletePersonel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeletePersonel", ReplyAction="http://tempuri.org/IAirportService/DeletePersonelResponse")]
        System.Threading.Tasks.Task DeletePersonelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditPersonel", ReplyAction="http://tempuri.org/IAirportService/EditPersonelResponse")]
        void EditPersonel(Airport.DataEntities.Entities.Personel personel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditPersonel", ReplyAction="http://tempuri.org/IAirportService/EditPersonelResponse")]
        System.Threading.Tasks.Task EditPersonelAsync(Airport.DataEntities.Entities.Personel personel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteTicket", ReplyAction="http://tempuri.org/IAirportService/DeleteTicketResponse")]
        void DeleteTicket(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteTicket", ReplyAction="http://tempuri.org/IAirportService/DeleteTicketResponse")]
        System.Threading.Tasks.Task DeleteTicketAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditTicket", ReplyAction="http://tempuri.org/IAirportService/EditTicketResponse")]
        void EditTicket(Airport.DataEntities.Entities.Ticket ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditTicket", ReplyAction="http://tempuri.org/IAirportService/EditTicketResponse")]
        System.Threading.Tasks.Task EditTicketAsync(Airport.DataEntities.Entities.Ticket ticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddUserTicket", ReplyAction="http://tempuri.org/IAirportService/AddUserTicketResponse")]
        void AddUserTicket(Airport.DataEntities.Entities.UserTicket userticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/AddUserTicket", ReplyAction="http://tempuri.org/IAirportService/AddUserTicketResponse")]
        System.Threading.Tasks.Task AddUserTicketAsync(Airport.DataEntities.Entities.UserTicket userticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditUserTicket", ReplyAction="http://tempuri.org/IAirportService/EditUserTicketResponse")]
        void EditUserTicket(Airport.DataEntities.Entities.UserTicket userticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/EditUserTicket", ReplyAction="http://tempuri.org/IAirportService/EditUserTicketResponse")]
        System.Threading.Tasks.Task EditUserTicketAsync(Airport.DataEntities.Entities.UserTicket userticket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteUserTicket", ReplyAction="http://tempuri.org/IAirportService/DeleteUserTicketResponse")]
        void DeleteUserTicket(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/DeleteUserTicket", ReplyAction="http://tempuri.org/IAirportService/DeleteUserTicketResponse")]
        System.Threading.Tasks.Task DeleteUserTicketAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetUserTicket", ReplyAction="http://tempuri.org/IAirportService/GetUserTicketResponse")]
        Airport.DataEntities.Entities.UserTicket[] GetUserTicket();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirportService/GetUserTicket", ReplyAction="http://tempuri.org/IAirportService/GetUserTicketResponse")]
        System.Threading.Tasks.Task<Airport.DataEntities.Entities.UserTicket[]> GetUserTicketAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAirportServiceChannel : Airport_PresentationLayer.AirportReferences.IAirportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AirportServiceClient : System.ServiceModel.ClientBase<Airport_PresentationLayer.AirportReferences.IAirportService>, Airport_PresentationLayer.AirportReferences.IAirportService {
        
        public AirportServiceClient() {
        }
        
        public AirportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AirportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Airport.DataEntities.Entities.Countries[] GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Countries[]> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public void AddCountries(Airport.DataEntities.Entities.Countries countries) {
            base.Channel.AddCountries(countries);
        }
        
        public System.Threading.Tasks.Task AddCountriesAsync(Airport.DataEntities.Entities.Countries countries) {
            return base.Channel.AddCountriesAsync(countries);
        }
        
        public void DeleteCountry(Airport.DataEntities.Entities.Countries id) {
            base.Channel.DeleteCountry(id);
        }
        
        public System.Threading.Tasks.Task DeleteCountryAsync(Airport.DataEntities.Entities.Countries id) {
            return base.Channel.DeleteCountryAsync(id);
        }
        
        public void AddProvince(Airport.DataEntities.Entities.Province province) {
            base.Channel.AddProvince(province);
        }
        
        public System.Threading.Tasks.Task AddProvinceAsync(Airport.DataEntities.Entities.Province province) {
            return base.Channel.AddProvinceAsync(province);
        }
        
        public void DeleteProvince(Airport.DataEntities.Entities.Province id) {
            base.Channel.DeleteProvince(id);
        }
        
        public System.Threading.Tasks.Task DeleteProvinceAsync(Airport.DataEntities.Entities.Province id) {
            return base.Channel.DeleteProvinceAsync(id);
        }
        
        public Airport.DataEntities.Entities.Province[] GetProvince() {
            return base.Channel.GetProvince();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Province[]> GetProvinceAsync() {
            return base.Channel.GetProvinceAsync();
        }
        
        public void AddCustomer(Airport.DataEntities.Entities.Customers customers) {
            base.Channel.AddCustomer(customers);
        }
        
        public System.Threading.Tasks.Task AddCustomerAsync(Airport.DataEntities.Entities.Customers customers) {
            return base.Channel.AddCustomerAsync(customers);
        }
        
        public Airport.DataEntities.Entities.Customers[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Customers[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public void AddExpedition(Airport.DataEntities.Entities.Expedition expedition) {
            base.Channel.AddExpedition(expedition);
        }
        
        public System.Threading.Tasks.Task AddExpeditionAsync(Airport.DataEntities.Entities.Expedition expedition) {
            return base.Channel.AddExpeditionAsync(expedition);
        }
        
        public Airport.DataEntities.Entities.Expedition[] GetExpedition() {
            return base.Channel.GetExpedition();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Expedition[]> GetExpeditionAsync() {
            return base.Channel.GetExpeditionAsync();
        }
        
        public void AddPersonel(Airport.DataEntities.Entities.Personel personel) {
            base.Channel.AddPersonel(personel);
        }
        
        public System.Threading.Tasks.Task AddPersonelAsync(Airport.DataEntities.Entities.Personel personel) {
            return base.Channel.AddPersonelAsync(personel);
        }
        
        public Airport.DataEntities.Entities.Personel[] GetPersonel() {
            return base.Channel.GetPersonel();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Personel[]> GetPersonelAsync() {
            return base.Channel.GetPersonelAsync();
        }
        
        public void AddTicket(Airport.DataEntities.Entities.Ticket ticket) {
            base.Channel.AddTicket(ticket);
        }
        
        public System.Threading.Tasks.Task AddTicketAsync(Airport.DataEntities.Entities.Ticket ticket) {
            return base.Channel.AddTicketAsync(ticket);
        }
        
        public Airport.DataEntities.Entities.Ticket[] GetTicket() {
            return base.Channel.GetTicket();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Ticket[]> GetTicketAsync() {
            return base.Channel.GetTicketAsync();
        }
        
        public void AddAirplane(Airport.DataEntities.Entities.Airplane airplane) {
            base.Channel.AddAirplane(airplane);
        }
        
        public System.Threading.Tasks.Task AddAirplaneAsync(Airport.DataEntities.Entities.Airplane airplane) {
            return base.Channel.AddAirplaneAsync(airplane);
        }
        
        public Airport.DataEntities.Entities.Airplane[] GetAirplane() {
            return base.Channel.GetAirplane();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Airplane[]> GetAirplaneAsync() {
            return base.Channel.GetAirplaneAsync();
        }
        
        public Airport.DataEntities.Entities.Airports[] ListForComboBox() {
            return base.Channel.ListForComboBox();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.Airports[]> ListForComboBoxAsync() {
            return base.Channel.ListForComboBoxAsync();
        }
        
        public void DeleteAirplane(int id) {
            base.Channel.DeleteAirplane(id);
        }
        
        public System.Threading.Tasks.Task DeleteAirplaneAsync(int id) {
            return base.Channel.DeleteAirplaneAsync(id);
        }
        
        public void EditAirplane(Airport.DataEntities.Entities.Airplane airplane) {
            base.Channel.EditAirplane(airplane);
        }
        
        public System.Threading.Tasks.Task EditAirplaneAsync(Airport.DataEntities.Entities.Airplane airplane) {
            return base.Channel.EditAirplaneAsync(airplane);
        }
        
        public void DeleteCustomer(int id) {
            base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public void EditCustomer(Airport.DataEntities.Entities.Customers customer) {
            base.Channel.EditCustomer(customer);
        }
        
        public System.Threading.Tasks.Task EditCustomerAsync(Airport.DataEntities.Entities.Customers customer) {
            return base.Channel.EditCustomerAsync(customer);
        }
        
        public void DeleteExpedition(int id) {
            base.Channel.DeleteExpedition(id);
        }
        
        public System.Threading.Tasks.Task DeleteExpeditionAsync(int id) {
            return base.Channel.DeleteExpeditionAsync(id);
        }
        
        public void EditExpedition(Airport.DataEntities.Entities.Expedition expedition) {
            base.Channel.EditExpedition(expedition);
        }
        
        public System.Threading.Tasks.Task EditExpeditionAsync(Airport.DataEntities.Entities.Expedition expedition) {
            return base.Channel.EditExpeditionAsync(expedition);
        }
        
        public void DeletePersonel(int id) {
            base.Channel.DeletePersonel(id);
        }
        
        public System.Threading.Tasks.Task DeletePersonelAsync(int id) {
            return base.Channel.DeletePersonelAsync(id);
        }
        
        public void EditPersonel(Airport.DataEntities.Entities.Personel personel) {
            base.Channel.EditPersonel(personel);
        }
        
        public System.Threading.Tasks.Task EditPersonelAsync(Airport.DataEntities.Entities.Personel personel) {
            return base.Channel.EditPersonelAsync(personel);
        }
        
        public void DeleteTicket(int id) {
            base.Channel.DeleteTicket(id);
        }
        
        public System.Threading.Tasks.Task DeleteTicketAsync(int id) {
            return base.Channel.DeleteTicketAsync(id);
        }
        
        public void EditTicket(Airport.DataEntities.Entities.Ticket ticket) {
            base.Channel.EditTicket(ticket);
        }
        
        public System.Threading.Tasks.Task EditTicketAsync(Airport.DataEntities.Entities.Ticket ticket) {
            return base.Channel.EditTicketAsync(ticket);
        }
        
        public void AddUserTicket(Airport.DataEntities.Entities.UserTicket userticket) {
            base.Channel.AddUserTicket(userticket);
        }
        
        public System.Threading.Tasks.Task AddUserTicketAsync(Airport.DataEntities.Entities.UserTicket userticket) {
            return base.Channel.AddUserTicketAsync(userticket);
        }
        
        public void EditUserTicket(Airport.DataEntities.Entities.UserTicket userticket) {
            base.Channel.EditUserTicket(userticket);
        }
        
        public System.Threading.Tasks.Task EditUserTicketAsync(Airport.DataEntities.Entities.UserTicket userticket) {
            return base.Channel.EditUserTicketAsync(userticket);
        }
        
        public void DeleteUserTicket(int id) {
            base.Channel.DeleteUserTicket(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserTicketAsync(int id) {
            return base.Channel.DeleteUserTicketAsync(id);
        }
        
        public Airport.DataEntities.Entities.UserTicket[] GetUserTicket() {
            return base.Channel.GetUserTicket();
        }
        
        public System.Threading.Tasks.Task<Airport.DataEntities.Entities.UserTicket[]> GetUserTicketAsync() {
            return base.Channel.GetUserTicketAsync();
        }
    }
}
